packer {
  required_plugins {
    name = {
      version = "~> 1"
      source  = "github.com/hashicorp/proxmox"
    }
  }

source "promox-clone" "clone-name" {
/*
  # Proxmox Clone Packer Template
  ## Web Application Hacking Lab
  ### Clone options and settings.

  clone_vm (string) - The name of the VM Packer should clone and build
    from. Either clone_vm or clone_vm_id must be specifed.
  
  clone_vm_id (int) - The ID of the VM Packer should clone and build
    from. Proxmox VMIDs are limited to the range 100-999999999.

  full_clone (boolean) - Whether to run a full or shallow clone from
    the base clone_vm. Defaults to true.
  */
  clone_vm = 
  clone_vm_id = 
  full_clone = 

/*
  ### Connection Settings

  boot_key_interval (duration string | ex: "1h5m2s") - Boot Key Interval

  proxmox_url (string) - URL to the Proxmox API, including the full path,
    so https://<server>:<port>/api2/json for example. Can also be set via
    the PROXMOX_URL environment variable.

  insecure_skip_tls_verify (bool) - Skip validating the certificate.

  username (string) - Username when authenticating to Proxmox, including
    the realm. For example user@pve to use the local Proxmox realm. When
    using token authentication, the username must include the token id
    after an exclamation mark. For example, user@pve!tokenid. Can also
    be set via the PROXMOX_USERNAME environment variable.

  password (string) - Password for the user. For API tokens please use
    token. Can also be set via the PROXMOX_PASSWORD environment variable.
    Either password or token must be specifed. If both are set, token
    takes precedence.

  token (string) - Token for authenticating API calls. This allows the
    API client to work with API tokens instead of user passwords. Can
    also be set via the PROXMOX_TOKEN environment variable. Either
    password or token must be specifed. If both are set, token takes
    precedence.
  */
  boot_key_interval = 
  proxmox_url =
  insecure_skip_tls_verify = 
  username = 
  password = 
  token = 

  /*
  ### General Settings

  node (string) - Which node in the Proxmox cluster to start the virtual
    machine on during creation.

  pool (string) - Name of resource pool to create virtual machine in.

  task_timeout (duration string | ex: "1h5m2s") - task_timeout (duration
    string | ex: "10m") - The timeout for Promox API operations, e.g.
    clones. Defaults to 1 minute.

  vm_name (string) - Name of the virtual machine during creation. If not
    given, a random uuid will be used.

  vm_id (int) - vm_id (int) - The ID used to reference the virtual machine.
    This will also be the ID of the final template. Proxmox VMIDs are
    unique cluster-wide and are limited to the range 100-999999999. If not
    given, the next free ID on the cluster will be used.

  tags (string) - The tags to set. This is a semicolon separated list. For
    example, debian-12;template.

  boot (string) - Override default boot order. Format example
    order=virtio0;ide2;net0. Prior to Proxmox 6.2-15 the format was
    cdn (c:CDROM -> d:Disk -> n:Network)

  onboot (bool) - Specifies whether a VM will be started during system bootup.
    Defaults to false.
  */
  node = 
  pool = 
  task_timeout = 
  vm_name = 
  vm_id = 
  tags = 
  boot =
  onboot = 

/*
  ### OS Settings

  os (string) - The operating system. Can be wxp, w2k, w2k3, w2k8, wvista, win7,
    win8, win10, l24 (Linux 2.4), l26 (Linux 2.6+), solaris or other. Defaults
    to other.

  disable_kvm (bool) - Disables KVM hardware virtualization. Defaults to false.

  cd_files ([]string) - A list of files to place onto a CD that is attached when
    the VM is booted. This can include either files or directories; any directories
    will be copied onto the CD recursively, preserving directory structure hierarchy.
    Symlinks will have the link's target copied into the directory tree on the CD
    where the symlink was. File globbing is allowed.
  */
  os = 
  disable_kvm =
  cd_files = ["", ""]
  cd_label = "cidata"

/*
### System Settings

  vga (vgaConfig) - The graphics adapter to use. See VGA Config.
    vga = {
      "type": "virtio",
      "memory": 32
    }

  type (string) - Can be cirrus, none, qxl,qxl2, qxl3, qxl4,
    serial0, serial1, serial2, serial3, std, virtio, vmware.
    Defaults to std.

  memory (int) - How much memory to assign.

  bios (string) - Set the machine bios. This can be set to ovmf or seabios.
    The default value is seabios.

  efi_config (efiConfig) - Set the efidisk storage options. See EFI Config.

  efidisk (string) - This option is deprecated, please use efi_config instead.

  machine (string) - Set the machine type. Supported values are 'pc' or 'q35'.

  rng0 (rng0Config) - Configure Random Number Generator via VirtIO. See VirtIO
    RNG device

  qemu_agent (boolean) - Enables QEMU Agent option for this VM. When enabled,
    then qemu-guest-agent must be installed on the guest. When disabled, then
    ssh_host should be used. Defaults to true.
*/
  vga = {
    "type": "std",
    "memory": 4
  }
  bios = 
  efi_config = 
  efidisk =
  machine = 
  rng0 = 
  qemu_agent = 

/*
  ### Disk Settings

  scsi_controller (string) - The SCSI controller model to emulate. Can be
    lsi, lsi53c810, virtio-scsi-pci, virtio-scsi-single, megasas, or pvscsi.
    Defaults to lsi.

  disks ([]diskConfig) - Disks attached to the virtual machine.
    disks = [
    {
      "type": "scsi",
      "disk_size": "5G",
      "storage_pool": "local-lvm",
      "storage_pool_type": "lvm"
    }
    ]

    type (string) - The type of disk. Can be scsi, sata, virtio or ide. Defaults
      to scsi.

    storage_pool (string) - Required. Name of the Proxmox storage pool to store
      the virtual machine disk on. A local-lvm pool is allocated by the installer,
      for example.

    storage_pool_type (string) - This option is deprecated.

    disk_size (string) - The size of the disk, including a unit suffix, such as
      10G to indicate 10 gigabytes.

    cache_mode (string) - How to cache operations to the disk. Can be none,
      writethrough, writeback, unsafe or directsync. Defaults to none.

    format (string) - The format of the file backing the disk. Can be raw, cow,
      qcow, qed, qcow2, vmdk or cloop. Defaults to raw.

    io_thread (bool) - Create one I/O thread per storage controller, rather
      than a single thread for all I/O. This can increase performance when
      multiple disks are used. Requires virtio-scsi-single controller and a
      scsi or virtio disk. Defaults to false.

    discard (bool) - Relay TRIM commands to the underlying storage. Defaults
      to false. See the Proxmox documentation for for further information.

    ssd (bool) - Drive will be presented to the guest as solid-state drive
      rather than a rotational disk.


    _This cannot work with virtio disks._
  */
  disks = [
  {
    "type": "scsi",
    "disk_size": "5G",
    "storage_pool": "local-lvm",
    "storage_pool_type": "lvm"
  }
  ]
  scsi_controller = 

/*
  ### CPU Settings

  cores (int) - How many CPU cores to give the virtual machine. Defaults to 1.

  cpu_type (string) - The CPU type to emulate. See the Proxmox API documentation
    for the complete list of accepted values. For best performance, set this to
    host. Defaults to kvm64.

  sockets (int) - How many CPU sockets to give the virtual machine. Defaults
    to 1

  numa (bool) - If true, support for non-uniform memory access (NUMA) is enabled.
    Defaults to false.
*/
  cores = 
  cpu_type = 
  sockets = 
  numa = 

/*
  ### Memory Settings

  memory (int) - How much memory (in megabytes) to give the virtual machine.
    If ballooning_minimum is also set, memory defines the maximum amount of
    memory the VM will be able to use. Defaults to 512.

  ballooning_minimum (int) - Setting this option enables KVM memory ballooning
    and defines the minimum amount of memory (in megabytes) the VM will have.
    Defaults to 0 (memory ballooning disabled).
  */
  memory =
  ballooning_minimum = 

/*
  ### Network Settings

  network_adapters ([]NICConfig) - The network adapter to use. See Network Adapters
    network_adapters = [

        {
          "model": "virtio",
          "bridge": "vmbr0",
          "vlan_tag": "10",
          "firewall": true
        }

    ]

  model (string) - Model of the virtual network adapter. Can be rtl8139, ne2k_pci,
    e1000, pcnet, virtio, ne2k_isa, i82551, i82557b, i82559er, vmxnet3,
    e1000-82540em, e1000-82544gc or e1000-82545em. Defaults to e1000.

  packet_queues (int) - Number of packet queues to be used on the device. Values
    greater than 1 indicate that the multiqueue feature is activated. For best
    performance, set this to the number of cores available to the virtual machine.
    CPU load on the host and guest systems will increase as the traffic increases,
    so activate this option only when the VM has to handle a great number of
    incoming connections, such as when the VM is operating as a router, reverse
    proxy or a busy HTTP server. Requires virtio network adapter. Defaults to 0.

  mac_address (string) - Give the adapter a specific MAC address. If not set, defaults
    to a random MAC. If value is "repeatable", value of MAC address is deterministic
    based on VM ID and NIC ID.

  mtu (int) - Set the maximum transmission unit for the adapter. Valid range: 0 - 65520.
    If set to 1, the MTU is inherited from the bridge the adapter is attached to.
    Defaults to 0 (use Proxmox default).

  bridge (string) - Required. Which Proxmox bridge to attach the adapter to.

  vlan_tag (string) - If the adapter should tag packets. Defaults to no tagging.

  firewall (bool) - If the interface should be protected by the firewall.
    Defaults to false.

  vm_interface (string) - Name of the network interface that Packer gets the VMs
    IP from. Defaults to the first non loopback interface.

  ipconfig ([]cloudInitIpconfig) - Set IP address and gateway via Cloud-Init.
    See the CloudInit Ip Configuration documentation for fields.

    ip (string) - Either an IPv4 address (CIDR notation) or dhcp.

    gateway (string) - IPv4 gateway.

    ip6 (string) - Can be an IPv6 address (CIDR notation), auto (enables SLAAC),
      or dhcp.

    gateway6 (string) - IPv6 gateway.

    Example:
      ipconfig = [
        {
          "ip": "192.168.1.55/24",
          "gateway": "192.168.1.1",
          "ip6": "fda8:a260:6eda:20::4da/128",
          "gateway6": "fda8:a260:6eda:20::1"
        }
      ]

  nameserver (string) - Set nameserver IP address(es) via Cloud-Init. If not given,
    the same setting as on the host is used.

  searchdomain (string) - Set the DNS searchdomain via Cloud-Init. If not given,
    the same setting as on the host is used.
  */
  network_adapters = [
    {
      "model": "virtio",
      "bridge": "vmbr0",
      "vlan_tag": "10",
      "firewall": true
    }
  ]
  vm_interface = 
  ipconfig = [
    {
      "ip": "192.168.1.55/24",
      "gateway": "192.168.1.1",
      "ip6": "fda8:a260:6eda:20::4da/128",
      "gateway6": "fda8:a260:6eda:20::1"
    }
  ]
  nameserver = 
  searchdomain = 

/*
  ### Additional Devices
  #### PCI Devices

  Allows passing through a host PCI device into the VM. For example, a graphics
  card or a network adapter. Devices that are mapped into a guest VM are no
  longer available on the host. A minimal configuration only requires either the
  host or the mapping key to be specifed.

  Note: VMs with passed-through devices cannot be migrated.

  pci_devices ([]pciDeviceConfig) - Allows passing through a host PCI device into
    the VM.

    pci_devices = [
      {
      host          = "0000:0d:00.1"
      pcie          = false
      device_id     = "1003"
      legacy_igd    = false
      mdev          = "some-model"
      hide_rombar   = false
      romfile       = "vbios.bin"
      sub_device_id = ""
      sub_vendor_id = ""
      vendor_id     = "15B3"
      x_vga         = false
      }
    ]

    host (string) - The PCI ID of a host’s PCI device or a PCI virtual function.
      You can us the lspci command to list existing PCI devices. Either this or
      the mapping key must be set.

    device_id (string) - Override PCI device ID visible to guest.

    legacy_igd (bool) - Pass this device in legacy IGD mode, making it the primary
      and exclusive graphics device in the VM. Requires pc-i440fx machine type and
      VGA set to none. Defaults to false.

    mapping (string) - The ID of a cluster wide mapping. Either this or the host key
      must be set.

    pcie (bool) - Present the device as a PCIe device (needs q35 machine model).
      Defaults to false.

    mdev (string) - The type of mediated device to use. An instance of this type
      will be created on startup of the VM and will be cleaned up when the VM stops.

    hide_rombar (bool) - Specify whether or not the device’s ROM BAR will be visible
      in the guest’s memory map. Defaults to false.

    romfile (string) - Custom PCI device rom filename (must be located in
      /usr/share/kvm/).

    sub_device_id (string) - Override PCI subsystem device ID visible to guest.

    sub_vendor_id (string) - Override PCI subsystem vendor ID visible to guest.

    vendor_id (string) - Override PCI vendor ID visible to guest.

    x_vga (bool) - Enable vfio-vga device support. Defaults to false.
  */
  # pci_devices = [
  #   {
  #     host          = "0000:0d:00.1"
  #     pcie          = false
  #     device_id     = "1003"
  #     legacy_igd    = false
  #     mdev          = "some-model"
  #     hide_rombar   = false
  #     romfile       = "vbios.bin"
  #     sub_device_id = ""
  #     sub_vendor_id = ""
  #     vendor_id     = "15B3"
  #     x_vga         = false
  #   }
  # ]

  /*
  ### Serial Settings

  serials ([]string) - A list (max 4 elements) of serial ports attached to the
    virtual machine. It may pass through a host serial device /dev/ttyS0 or
    create unix socket on the host socket. Each element can be socket or responding
    to pattern /dev/.+.
    
    Example:

    serials = [
      "socket",
      "/dev/ttyS1"
    ]

  
  */
    serials = []

  /*
  ### Cloud-Init Settings

  cloud_init (bool) - If true, add an empty Cloud-Init CDROM drive after the virtual
    machine has been converted to a template. Defaults to false.

  cloud_init_storage_pool (string) - Name of the Proxmox storage pool to store the
    Cloud-Init CDROM on. If not given, the storage pool of the boot device will be used.

  qemu_additional_args (string) - Arbitrary arguments passed to KVM. For example -no-reboot
    -smbios type=0,vendor=FOO. Note: this option is for experts only.
  */
  cloud_init = 
  cloud_init_storage_pool =
  qemu_additional_args =

  /*
  ### Template Settings

  template_name (string) - Name of the template. Defaults to the generated
    name used during creation.

  template_description (string) - Description of the template, visible in
    the Proxmox interface.
*/
template_name = 
template_description = 

}